import paho.mqtt.client as mqtt 	#import the client1
import time


def on_message(client, userdata, message):
	print("message received " ,str(message.payload.decode("utf-8")))
	print("message topic=",message.topic)
	print("message qos=",message.qos)
	print("message retain flag=",message.retain)

def on_connect(client, userdata, flags, rc):
	if rc==0:
		print("Connected with result code "+str(rc))
	else:
		print("Not connected")

def on_log(client, userdata, level, buf):
   	print("log: ",buf)

def on_disconnect(client, userdata, flags, rc=0):
	print("Disconnected with result code "+str(rc))
	

broker="*broker address*"

print("creating new instance")

client = mqtt.Client("P1") 	#create new instance

client.on_message=on_message #attach function to callback
client.on_connect=on_connect
client.on_disconnect=on_disconnect
client.on_log=on_log

print("connecting to broker",broker)

client.connect(broker) #connect to broker
client.loop_start() #start the loop

print("Subscribing to topic","esp32/branch1/temp")
client.subscribe("esp32/branch1/temp")

print("Publishing message to topic","esp32/branch1/temp")
client.publish("esp32/branch1/temp","OFF")

time.sleep(4) # wait
client.loop_stop() #stop the loop
client.disconnect()